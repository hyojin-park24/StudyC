/* 06 반복문 
	<06-1 While문, for문, do~while문>
	- 어떤 코드를 되풀이해서 자동으로 반복할 수 있도록 반복문을 제공
	- 반복문 : 일정 조건을 만족하는 동안 같은 실행문을 반복
				-> 조건문과 조건을 만족했을 때 실행하는 문장
				-> 조건식의 위치에 따라 반복문이 구분됨 
				- 반복문 이미지 필요 (p.154)
	[반복문 종류 세가지]
	- while(조건식)
	  {
			실행문;
	  }
	  1. 조건을 물어보고 만족하는 동안
	  2. 실행문 실행
	  3. 거짓일때 반복문 이후의 문장으로 건너뜀

	- for(초기식; 조건식; 증감식)
	  {
		실행문;
	  }
	  1. 초기값을 최초 설정한 다음
	  2. 조건을 물어보고
	  3. 실행문을 실행한 다음
	  4. 증감식을 실행하고 다시
	  5. 조건을 확인

	  **주의
	  * 초기식, 조건식, 증감식은 반복 횟수를 알기 쉽게 작성
	  * 반복 횟수를 세는변수를 반복문 안에서 바꾸지 않는 것이 좋다

	- do
	  {
		실행문;
	  } while(조건식);
	  1. 실행문을 무조건 실행하고
	  2. 조건을 확인한 후에 다시
	  3. 실행문을 실행
*/

#include <stdio.h>

int main()
{
	int a = 1;			//int변수 a선언 후 1대입하고 초기화 , 곱셉을 하기 위해 1로 초기화
	int i;

	/*while문*/
	/* while (a < 10)		//1. a가 10보다 작으므로 조건식은 참
	{
		a = a * 2;		//2. a에 2를 곱해 a에 다시 저장
	}*/

	// a = 1 -> while a = 2
	// a = 2 -> while a = 4
	// a = 4 -> while a = 8
	// a = 8 -> while a = 16
	// a = 16 ->조건식 거짓이므로 빠져나옴
	// while문 총 4회 반복

	/*for문*/
	for (i = 0; i < 3; i++)		//1. i는 0으로 초기화된 후에 2. 3보다 작은 동안
	{							//3. 하나씩 증가하면서
		a = a * 2;				//실행문을 실행
	}
	//초기식은 변수i를 초기화하는 부분으로 딱 한 번 실행됨
	//조건식을 검사하여 결과가 참이면 블록 안으로 들어가 반복할 실행문을 실행
	//반복할 부분을 수행하면 증감식으로 올라가 i를 1증가시키고 다시 조건식을 검사하는 순서로 반복

	printf("a : %d\n", a);		//for문을 빠져나오면 a 값 출력

	return 0;
}